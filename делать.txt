передача результата javascript в частичное представление
jsreader и главное представление, в котором всё будет загружено и в зависимости от событий скрываться
а кнопки будут посылать в контроллеры запросы

1. сделать функции для запросов и исполнения jsreader верстки
1. создать шаблоны для json данных, на основе всех api результатов(составить список)(есть)


2. Создать промисы для получения json данных - передача параметров в один метод резиновый
привязка к нескольким моделям? - dialog? - генерация только некоторых свойств и генерация общего
кнопка выхода - отдельный Div - есть готовая модалка скачанная
кнопки статуса передача данных
типы input для ввода, привязка сама это делает
button и submit формы
как дату и время вводить?
заголовок модалки вынести - обращение к двум div, header и данные
!парсить Json для кнопок!
параметры get fetch?

шаблоны все будут в основной странице хранится? в другом месте их нельзя создать, если только подключать страницу с ними
для шаблона тем - лучше отрисовка выпадающего списка как getsuggests
при status = 1 или 2

1. главное представление и его окна, дизайн - доделать html структуру, стили классы
2. обработчики событий и функции их вызывающие, распределене шаблонов
3. АВТОРИЗАЦИЯ - присвоение id to currentuser(кстати поменять запросы на scope вместо singleton Тогда)

читать - авторизация, модальные окна

диалоги
авторизация: куки, httpcontextaccessor, metanit - создать UserManager 
все сервисы SCOPED
AccountController редирект без авторизации

КАТЕГОРИИ ВОПРОСОВ:
1. HTML
1.1 привязка input к модели - js валидация и серверная
1.2. dialog
1.3. Дата время готовую
1.5 окно логина

2. JS
2.1. json парсинг для кнопок
2.3. передача id и других значений от кнопок
2.5. функция на вводе давать подходящие значения
3. CSS


объект редактируемого задания, в котором хранятся данные, с методами setStatus, writeComment
методы .render(), .open(), history()

сделал репозитории на JS
создал методы для запросов get post и проверкой результата
выделил модалки в отдельные представления
!POST не принимает значения - нашел ошибку в неправильном наследовании контроллера и именовании json свойств
привязка нескольких значений требует создания привязатора или модели

1. валидаторы в репозитории?
2. как распределять события(и список событий) проблема логической связи вызова элементов
настроить порядок импорта
3. объединить кнопки статуса
(авторизация, объект задания и у него вызовы)
// форма логина и регистрации является отдельной частью 
 // событие убрать окно при клике снаружи


taskobject
jsrender, razor не нужен. класс для каждого окна

рендерить и искать или сразу вставить?
moneyAward как получать? из формы получать, назначение объекта выбранного задания для зависимых



---------------------------
во всех методах проверять результат?
userManager - scoped single?
привести объекты к примитивам в методах?

проверить передачу json в шаблоны - data.result или просто data
TypeScript добавить

как регистрация будет работать с js? - не SPA выходит

----


добавление задание по теме - ID Темы передавать - 
при ссылочных значениях передавать названия или id? - taskTheme по ID

проверка выбора при submit или скрытым полем?


процедуры поиска правильно работают?
добавить БД, стили

исправлено: выбор темы, имена свойств в шаблонах, присваивание ID пользователю

(datamember определяет имя свойства при .json()?
----



(из-за bootstrap плохое позиционирование таблицы)

баги:
можно принять задание и его отменить, логич проблема(2 статуса отмены мб?)
при вводе отрицательной суммы и выхода, ставится null
добавление темы идет с поиска существующих !начинающихся! с введенной строки
логин тоже

выбор темы списком
без стилей алерты или окна резко исчезают - костыль

----
проверки: добавить проверку на невыбранную тему, существующую тему при добавлении
проверки уровня данных - логин уникальный, только разрешенные символы
ожидание завершения действия - в каждом действии создание, по завершении убрать 

как выводить ошибку в статусе?
дата до 1970 не хочет вводится



генерация исключения пустого результата в методах чтения
Getalltasks и всякие убрать
ID к Id
можно улучшить если ловить исключения констрэинтов
rider?

---
data = cascfasf -> проверку try catch, или возврат serviceresponse при ошибке чтения json.
foreach в методе добавления url
showsuggets - разграничить dom операции, сделать шаблон для вариантов
----


log error eventId
стоит ли инжектить usermanager в контроллер?
в приватный метод права проверку
добавить ссылку в переменные, а не поиск их - делать после рендера
добавить описания

----
сортировка по времени, добавить поле даты для комментов
алерты убрать - для успешных операций добавить глобальное окно
-----

сброс полей после добавления задания
ПЕРЕКЛЮЧЕНИЕ ОКОН ОШИБКИ ДЛЯ НОВЫХ ДЕНЕГ!!
можно изменить статус, если задание не взято - на стороне сервера

в каких случаях возникает exception fetch?
понять как распределять классы